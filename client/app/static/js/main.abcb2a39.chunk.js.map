{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/API.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["authService","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","localStorage","removeItem","exp","Date","now","err","getItem","idToken","setItem","window","location","assign","removeBookId","bookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","REMOVE_BOOK","_templateObject4","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","_useMutation","useMutation","_useMutation2","saveBook","error","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","bookData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","link","infoLink","t0","console","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_yield$saveBook","_context2","find","Auth","loggedIn","variables","data","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Link","href","rel","Img","src","alt","Body","Title","Text","disabled","some","onClick","QUERY_ME","SavedBooks","_useQuery","useQuery","loading","removeBook","userData","me","handleDeleteBook","_yield$removeBook","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","_event$target","_objectSpread","_defineProperty","_yield$addUser","currentTarget","checkValidity","stopPropagation","login","log","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","_yield$login","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abcb2a39.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    if (!token) {\n      return false;\n    } else if (this.isTokenExpired(token)) {\n      localStorage.removeItem(\"id_token\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nconst authService = new AuthService();\nexport default authService;","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($username: String!, $email: String!, $password: String!) {\r\n        addUser(username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SAVE_BOOK = gql`\r\n    mutation saveBook($bookData: BookInput!) {\r\n        saveBook(bookData: $bookData) {\r\n            _id\r\n            username\r\n            email\r\n            bookCount\r\n            savedBooks {\r\n                bookId\r\n                authors\r\n                title\r\n                description\r\n                image\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_BOOK = gql`\r\n    mutation removeBook($bookId: ID!) {\r\n        _id\r\n        username\r\n        email\r\n        bookCount\r\n        savedBooks {\r\n            bookId\r\n            authors\r\n            title\r\n            description\r\n            image\r\n            link\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { searchGoogleBooks } from \"../utils/API\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n        link: book.volumeInfo.infoLink,\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: bookToSave },\n      });\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Link href={book.link} target=\"_blank\" rel=\"noreferrer\">\n                    <Card.Img\n                      src={book.image}\n                      alt={`The cover for ${book.title}`}\n                      variant=\"top\"\n                    />\n                  </Card.Link>\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )\n                        ? \"This book has already been saved!\"\n                        : \"Save this Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            bookCount\r\n            savedBooks {\r\n                bookId\r\n                authors\r\n                title\r\n                description\r\n                image\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n  const userData = data?.me || {};\n\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n      // Remove bookid from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Error handling\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Link href={book.link} target=\"_blank\" rel=\"noreferrer\">\n                    <Card.Img\n                      src={book.image}\n                      alt={`The cover for ${book.title}`}\n                      variant=\"top\"\n                    />\n                  </Card.Link>\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst SignupForm = () => {\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.log(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;","// Import React, useState, and several components from react-bootstrap library\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// Import Auth and useMutation hook from Apollo Client, as well as LOGIN_USER mutation\nimport Auth from \"../utils/auth\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\n// Define LoginForm component\nconst LoginForm = () => {\n  // Declare state variables with useState hook\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  // Declare state variables with useMutation hook for login mutation and loading status\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // Define function to update state when user input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  // Define function to handle form submission\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // Use login mutation to log user in and store token in Auth\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    // Reset form data after submission\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  // Render login form\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar' className='d-flex flex-row-reverse'>\n            <Nav className='ml-auto d-flex'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\nimport { ApolloClient, InMemoryCache, createHttpLink, ApolloProvider } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Routes>\n            <Route \n              path='/' \n              element={<SearchBooks />} \n            />\n            <Route \n              path='/saved' \n              element={<SavedBooks />} \n            />\n            <Route \n              path='*'\n              element={<h1 className='display-2'>Wrong page!</h1>}\n            />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}